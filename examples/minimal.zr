# Mazer magic

### Evaluation and Interpretation

let a = (+ 1 2 3 4 5 6 7 8 9);

let b = (* 10 (* a 10));

The answer of b is eval(b)

b can be writted as: fmt(b)



fmt(matrix (1 2 3))
fmt(matrix (1) (2) (3))

let m1 = (matrix 1 2 3);

let m2 = (matrix 4 5 6);

let m3 = (dot m1 m2);

eval(m3) // this works


let m10 = (matrix (11 12 13));

let m20 = (matrix (14 15 16));

let m30 = (dot m10 m20);

eval(m30) // this results in an error saying "expected function got 1


# Syntax and Semantics

### matrix (1 1 1)

fmt(matrix (1 1 1))

### matrix (2) (2) (2)

fmt(matrix (2) (2) (2))

### matrix (1 2 3) (4 5 6) (7 8 9)

fmt(matrix (1 2 3) (4 5 6) (7 8 9))

### matrix (1 0 0) (0 1 0) (0 0 1)

fmt(matrix (1 0 0) (0 1 0) (0 0 1))

### matrix (1 2 3 4 5 6 7 8 9) (10 11 12 13 14 15 16 17 18) (19 20 21 22 23 24 25 26 27) (28 29 30 31 32 33 34 35 36)

fmt(matrix (1 2 3 4 5 6 7 8 9) (10 11 12 13 14 15 16 17 18) (19 20 21 22 23 24 25 26 27) (28 29 30 31 32 33 34 35 36))

### matrix (1) (2 3) (4)

fmt(matrix (1) (2 3) (4))

### matrix ((sin x)) ((cos x)) ((tan x))

fmt(matrix ((sin x)) ((cos x)) ((tan x)))

### sin (matrix (x) (y))

fmt(sin (matrix (x) (y)))

### integral (integral (integral (pow x 2) 0 1 x) 0 1 y) 0 1 z

fmt(integral (integral (integral (pow x 2) 0 1 x) 0 1 y) 0 1 z)

### sin (sum i 1 10 (integral (pow x 2) 0 1 x))

fmt(sin (sum i 1 10 (integral (pow x 2) 0 1 x)))

### matrix ((matrix (0)) (matrix (1))) (2) ((matrix (3 4))) (5) (6)

fmt(matrix ((matrix (0)) (matrix (1))) (2) ((matrix (3 4))) (5) (6))

### matrix ((matrix (0) (1))) (2) ((matrix (3 4))) (5) (6)

fmt(matrix ((matrix (0) (1))) (2) ((matrix (3 4))) (5) (6))


### log 10 1000

fmt(log 10 1000)

### log e 1000

fmt(log e 1000)

### ln 1000

fmt(ln 1000)

### dot product


fmt(
    (dot
        (matrix (1 2 3))
        (matrix (4 5 6))
    )
)

fmt(
    (dot
        (matrix (1) (2) (3))
        (matrix (4) (5) (6))
    )
)




